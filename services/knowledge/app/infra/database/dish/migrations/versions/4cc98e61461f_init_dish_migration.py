"""Init dish migration

Revision ID: 4cc98e61461f
Revises:
Create Date: 2025-03-30 13:43:38.066997

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "4cc98e61461f"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ttk_categories",
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    op.create_table(
        "ttk_groups",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("image", sa.String(), nullable=False),
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    op.create_table(
        "ttk_ingredients",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("num", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    op.create_table(
        "ttk_products",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("image", sa.String(), nullable=False),
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("group_id", sa.Integer(), nullable=False),
        sa.Column("group_uuid", sa.Uuid(), nullable=False),
        sa.Column("category_id", sa.Integer(), nullable=False),
        sa.Column("category_uuid", sa.Uuid(), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("fat", sa.Float(), nullable=False),
        sa.Column("proteins", sa.Float(), nullable=False),
        sa.Column("carbohydrates", sa.Float(), nullable=False),
        sa.Column("energy", sa.Float(), nullable=False),
        sa.Column("full_fat", sa.Float(), nullable=False),
        sa.Column("full_proteins", sa.Float(), nullable=False),
        sa.Column("full_carbohydrates", sa.Float(), nullable=False),
        sa.Column("full_energy", sa.Float(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["category_id"],
            ["ttk_categories.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["ttk_groups.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    op.create_table(
        "ttk_modifiers",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("product_uuid", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("num", sa.String(), nullable=False),
        sa.Column("deleted", sa.Boolean(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("capacity", sa.Float(), nullable=False),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("default_amount", sa.Float(), nullable=False),
        sa.Column("minimum_amount", sa.Float(), nullable=False),
        sa.Column("maximum_amount", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["ttk_products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    op.create_table(
        "ttk_assembly_charts",
        sa.Column("modifier_id", sa.Integer(), nullable=True),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("ingredient_id", sa.Integer(), nullable=False),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("iiko_uuid", sa.Uuid(), nullable=False),
        sa.Column("weight", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["ingredient_id"],
            ["ttk_ingredients.id"],
        ),
        sa.ForeignKeyConstraint(
            ["modifier_id"],
            ["ttk_modifiers.id"],
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["ttk_products.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("iiko_uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("ttk_assembly_charts")
    op.drop_table("ttk_modifiers")
    op.drop_table("ttk_products")
    op.drop_table("ttk_ingredients")
    op.drop_table("ttk_groups")
    op.drop_table("ttk_categories")
    # ### end Alembic commands ###
