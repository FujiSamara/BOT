"""Updating bid by front features

Revision ID: 7c17d0134d7f
Revises: 477080eff7f9
Create Date: 2024-07-30 14:15:56.533408

"""

from typing import Sequence, Union
import fastapi_storages

from alembic import op
import sqlalchemy as sa

from app.infra.config import settings


# revision identifiers, used by Alembic.
revision: str = "0a5d4c0b1280"
down_revision: Union[str, None] = "477080eff7f9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bids_documents",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "document",
            fastapi_storages.integrations.sqlalchemy.FileType(storage=settings.storage),
            nullable=False,
        ),
        sa.Column("bid_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["bid_id"],
            ["bids.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("bids", sa.Column("expenditure_id", sa.Integer(), nullable=False))
    op.add_column(
        "bids",
        sa.Column(
            "fac_state",
            sa.Enum(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                name="approvalstatus",
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "bids",
        sa.Column(
            "cc_state",
            sa.Enum(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                name="approvalstatus",
            ),
            nullable=False,
        ),
    )
    op.add_column(
        "bids",
        sa.Column(
            "cc_supervisor_state",
            sa.Enum(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                name="approvalstatus",
            ),
            nullable=False,
        ),
    )
    op.create_foreign_key(None, "bids", "expenditures", ["expenditure_id"], ["id"])
    op.drop_column("bids", "document")
    op.drop_column("bids", "agreement")
    op.drop_column("bids", "document1")
    op.drop_column("bids", "urgently")
    op.drop_column("bids", "document2")
    op.drop_column("bids", "need_document")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("bids_documents")
    op.add_column(
        "bids",
        sa.Column("need_document", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "bids", sa.Column("document2", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "bids", sa.Column("urgently", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "bids", sa.Column("document1", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "bids", sa.Column("agreement", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "bids", sa.Column("document", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.drop_constraint(None, "bids", type_="foreignkey")
    op.drop_column("bids", "cc_supervisor_state")
    op.drop_column("bids", "cc_state")
    op.drop_column("bids", "fac_state")
    op.drop_column("bids", "expenditure_id")
    # ### end Alembic commands ###
