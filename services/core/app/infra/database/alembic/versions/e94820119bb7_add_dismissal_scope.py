"""Add dismissal scope and table

Revision ID: e94820119bb7
Revises: 242dff4d09c0
Create Date: 2024-09-23 13:35:23.703197

"""

from typing import Sequence, Union
from app.infra.database.alembic.enum import update_enum
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM
import fastapi_storages
from app.infra.config.settings import settings

old_options = (
    "admin",
    # CRM
    "crm_bid",
    "crm_budget",
    "crm_expenditure",
    "crm_fac_cc_bid",
    "crm_paralegal_bid",
    "crm_my_bid",
    "crm_archive_bid",
    "crm_my_file",
    "crm_bid_readonly",
    "crm_worktime",
    "crm_accountant_card_bid",
    # BOT
    "bot_bid_create",
    "bot_bid_kru",
    "bot_bid_owner",
    "bot_bid_teller_cash",
    "bot_bid_teller_card",
    "bot_bid_accountant_cash",
    "bot_bid_accountant_card",
    "bot_rate",
    "bot_worker_bid",
    "bot_technical_request_worker",
    "bot_technical_request_repairman",
    "bot_technical_request_chief_technician",
    "bot_technical_request_appraiser",
    "bot_technical_request_department_director",
    "bot_bid_it_worker",
    "bot_bid_it_repairman",
    "bot_bid_it_tm",
    "bot_personal_cabinet",
    "bot_incident_monitoring",
    "bot_bid_fac_cc",
    "bot_subordinates_menu",
    "bot_worker_bid_security_coordinate",
    "bot_worker_bid_accounting_coordinate",
)
new_options = sorted(
    old_options
    + (
        "bot_dismissal_kru",
        "bot_dismissal_accountant",
        "bot_dismissal_access",
        "bot_dismissal_tech",
        "bot_dismissal_chief",
    )
)

table_columns = {"post_scopes": ["scope"]}

# revision identifiers, used by Alembic.
revision: str = "e94820119bb7"
down_revision: Union[str, None] = "242dff4d09c0"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    update_enum(old_options, new_options, "fujiscope", table_columns)
    op.create_table(
        "dismissals",
        sa.Column("worker_id", sa.Integer(), nullable=False),
        sa.Column(
            "tech_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "accountant_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "access_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "kru_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("tech_comment", sa.String(), nullable=True),
        sa.Column("accountant_comment", sa.String(), nullable=True),
        sa.Column("access_comment", sa.String(), nullable=True),
        sa.Column("kru_comment", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=False),
        sa.Column("close_date", sa.DateTime(), nullable=True),
        sa.Column("kru_approval_date", sa.DateTime(), nullable=True),
        sa.Column("accountant_approval_date", sa.DateTime(), nullable=True),
        sa.Column("access_approval_date", sa.DateTime(), nullable=True),
        sa.Column("tech_approval_date", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["worker_id"],
            ["workers.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dismissal_documents",
        sa.Column(
            "document",
            fastapi_storages.integrations.sqlalchemy.FileType(storage=settings.storage),
            nullable=False,
        ),
        sa.Column("dismissal_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dismissal_id"],
            ["dismissals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dismissal_documents")
    op.drop_table("dismissals")
    update_enum(new_options, old_options, "fujiscope", table_columns)
    # ### end Alembic commands ###
