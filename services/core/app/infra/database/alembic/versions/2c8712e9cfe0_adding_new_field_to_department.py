"""Adding new field to department

Revision ID: 2c8712e9cfe0
Revises: 5d2ec93c1975
Create Date: 2024-06-12 00:48:08.690437

"""

from typing import Sequence, Union

from sqlalchemy.dialects.postgresql import ENUM
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2c8712e9cfe0"
down_revision: Union[str, None] = "5d2ec93c1975"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    enum = ENUM("dark_store", "restaurant", "fast_casual", name="departmenttype")
    enum.create(op.get_bind(), checkfirst=True)
    op.add_column("departments", sa.Column("city", sa.String(), nullable=True))
    op.add_column(
        "departments",
        sa.Column(
            "type",
            sa.Enum("dark_store", "restaurant", "fast_casual", name="departmenttype"),
            nullable=True,
        ),
    )
    op.add_column(
        "departments", sa.Column("opening_date", sa.DateTime(), nullable=True)
    )
    op.add_column(
        "departments", sa.Column("closing_date", sa.DateTime(), nullable=True)
    )
    op.add_column("departments", sa.Column("area", sa.Float(), nullable=True))
    op.add_column(
        "departments", sa.Column("territorial_manager_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "departments",
        sa.Column("territorial_brand_chef_id", sa.Integer(), nullable=True),
    )
    op.add_column(
        "departments", sa.Column("delivery_manager_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "departments", sa.Column("territorial_director_id", sa.Integer(), nullable=True)
    )
    op.create_foreign_key(
        None, "departments", "workers", ["territorial_brand_chef_id"], ["id"]
    )
    op.create_foreign_key(
        None, "departments", "workers", ["territorial_manager_id"], ["id"]
    )
    op.create_foreign_key(
        None, "departments", "workers", ["territorial_director_id"], ["id"]
    )
    op.create_foreign_key(
        None, "departments", "workers", ["delivery_manager_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "departments", type_="foreignkey")
    op.drop_constraint(None, "departments", type_="foreignkey")
    op.drop_constraint(None, "departments", type_="foreignkey")
    op.drop_constraint(None, "departments", type_="foreignkey")
    op.drop_column("departments", "territorial_director_id")
    op.drop_column("departments", "delivery_manager_id")
    op.drop_column("departments", "territorial_brand_chef_id")
    op.drop_column("departments", "territorial_manager_id")
    op.drop_column("departments", "area")
    op.drop_column("departments", "closing_date")
    op.drop_column("departments", "opening_date")
    op.drop_column("departments", "type")
    op.drop_column("departments", "city")
    enum = ENUM("dark_store", "restaurant", "fast_casual", name="departmenttype")
    enum.drop(op.get_bind())
    # ### end Alembic commands ###
