"""Add dismissal

Revision ID: af7ea0cb0926
Revises: e94820119bb7
Create Date: 2024-09-29 19:59:05.583296

"""

from typing import Sequence, Union


from alembic import op
import fastapi_storages
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

from settings import get_settings

# revision identifiers, used by Alembic.
revision: str = "af7ea0cb0926"
down_revision: Union[str, None] = "e94820119bb7"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dismissals",
        sa.Column("subordination_id", sa.Integer(), nullable=False),
        sa.Column(
            "chief_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "tech_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "accountant_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "access_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "kru_state",
            ENUM(
                "pending",
                "approved",
                "denied",
                "pending_approval",
                "skipped",
                "not_relevant",
                name="approvalstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("chief_comment", sa.String(), nullable=True),
        sa.Column("tech_comment", sa.String(), nullable=True),
        sa.Column("accountant_comment", sa.String(), nullable=True),
        sa.Column("access_comment", sa.String(), nullable=True),
        sa.Column("kru_comment", sa.String(), nullable=True),
        sa.Column("create_date", sa.DateTime(), nullable=False),
        sa.Column("close_date", sa.DateTime(), nullable=True),
        sa.Column("chief_approval_date", sa.DateTime(), nullable=True),
        sa.Column("kru_approval_date", sa.DateTime(), nullable=True),
        sa.Column("accountant_approval_date", sa.DateTime(), nullable=True),
        sa.Column("access_approval_date", sa.DateTime(), nullable=True),
        sa.Column("tech_approval_date", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["subordination_id"],
            ["subordinations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "dismissal_documents",
        sa.Column(
            "document",
            fastapi_storages.integrations.sqlalchemy.FileType(
                storage=get_settings().storage
            ),
            nullable=False,
        ),
        sa.Column("dismissal_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dismissal_id"],
            ["dismissals.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("dismissal_documents")
    op.drop_table("dismissals")
    # ### end Alembic commands ###
