"""BioSmart comparison

Revision ID: 9db9f79ff192
Revises:
Create Date: 2024-05-03 10:54:18.074963

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "9db9f79ff192"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("companies", sa.Column("biosmart_strid", sa.String(), nullable=True))
    op.add_column("companies", sa.Column("bs_import", sa.Boolean(), nullable=True))
    op.add_column(
        "companies", sa.Column("bs_import_error", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "departments", sa.Column("biosmart_strid", sa.String(), nullable=True)
    )
    op.add_column("departments", sa.Column("bs_import", sa.Boolean(), nullable=True))
    op.add_column(
        "departments", sa.Column("bs_import_error", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "departments", sa.Column("bs_import_error_text", sa.String(), nullable=True)
    )
    op.add_column("workers", sa.Column("company_id", sa.Integer(), nullable=True))
    op.add_column("workers", sa.Column("biosmart_strid", sa.String(), nullable=True))
    op.add_column("workers", sa.Column("bs_import", sa.Boolean(), nullable=True))
    op.add_column("workers", sa.Column("bs_import_error", sa.Boolean(), nullable=True))
    op.add_column(
        "workers", sa.Column("bs_import_error_text", sa.String(), nullable=True)
    )
    op.create_foreign_key(None, "workers", "companies", ["company_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "workers", type_="foreignkey")
    op.drop_column("workers", "bs_import_error_text")
    op.drop_column("workers", "bs_import_error")
    op.drop_column("workers", "bs_import")
    op.drop_column("workers", "biosmart_strid")
    op.drop_column("workers", "company_id")
    op.drop_column("departments", "bs_import_error_text")
    op.drop_column("departments", "bs_import_error")
    op.drop_column("departments", "bs_import")
    op.drop_column("departments", "biosmart_strid")
    op.drop_column("companies", "bs_import_error")
    op.drop_column("companies", "bs_import")
    op.drop_column("companies", "biosmart_strid")
    # ### end Alembic commands ###
